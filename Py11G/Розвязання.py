# Відкриття файлу для читання
f = open("input.txt", "r")
# Зчитування кількості вершин (nv), кількості ребер (ne) і довжини маршруту (m)
[nv, ne, m] = f.readline().split()
nv = int(nv)  # кількість вершин
ne = int(ne)  # кількість ребер
m = int(m)    # довжина маршруту
# Ініціалізація списків суміжності
b = [[] for k in range(nv)]
# Заповнення списків суміжності
for l in range(ne):
    [j, k] = f.readline().split()
    j = int(j)
    k = int(k)
    b[j].append(k)
    b[k].append(j)
    print(f"Список: {b}")
# Закриття файлу введення
f.close
# Ініціалізація матриці для збереження кількості маршрутів
c = [[0] * nv, [0] * nv]
c[0][0] = 1
i0 = 0  # індекс того, що знаємо
i1 = 1  # індекс того, що обчислюємо
# Обчислення кількості маршрутів за допомогою динамічного програмування
for l in range(m):
    c[i1] = [0] * nv
    for j in range(nv):
        for k in range(len(b[j])):
            print(c[i0][b[j][k]], i0, b[j][k],"\n+")
            print(c[i1][j], i1, j)
            c[i1][j] += c[i0][b[j][k]]
            print(f"Кількість маршрутів: {c}")
    # Переключення індексів для наступної ітерації
    i0 = 1 - i0
    i1 = 1 - i1
# Відкриття файлу для запису результату
f = open("output.txt", "w")
# Запис кількості маршрутів у вихідний файл
f.write(str(c[i0][nv - 1]) + '\n')
# Закриття файлу виведення
f.close()